<?xml version="1.0" encoding="UTF-8"?>
<!--
  ~ Copyright [2018] Tyro Payments Limited.
  ~
  ~ Licensed under the Apache License, Version 2.0 (the "License");
  ~ you may not use this file except in compliance with the License.
  ~ You may obtain a copy of the License at
  ~
  ~     http://www.apache.org/licenses/LICENSE-2.0
  ~
  ~ Unless required by applicable law or agreed to in writing, software
  ~ distributed under the License is distributed on an "AS IS" BASIS,
  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  ~ See the License for the specific language governing permissions and
  ~ limitations under the License.
  -->

<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>com.tyro.oss</groupId>
    <artifactId>rabbit-amazon-bridge</artifactId>
    <version>0.9.0-SNAPSHOT</version>
    <packaging>jar</packaging>

    <name>${project.artifactId}</name>
    <description>A general purpose service that route rabbit messages to services running in Amazon Web Services.</description>
    <url>https://github.com/tyro/rabbit-amazon-bridge</url>

    <scm>
        <connection>scm:git:https://github.com/tyro/rabbit-amazon-bridge.git</connection>
        <developerConnection>scm:git:https://github.com/tyro/rabbit-amazon-bridge.git</developerConnection>
        <url>https://github.com/tyro/rabbit-amazon-bridge</url>
        <tag>HEAD</tag>
    </scm>

    <parent>
        <groupId>io.spring.platform</groupId>
        <artifactId>platform-bom</artifactId>
        <version>Cairo-SR3</version>
    </parent>

    <licenses>
        <license>
            <name>The Apache License, Version 2.0</name>
            <url>http://www.apache.org/licenses/LICENSE-2.0.txt</url>
        </license>
    </licenses>

    <developers>
        <developer>
            <email>opensource@tyro.com</email>
            <organization>Tyro Payments Limited</organization>
            <organizationUrl>https://www.tyro.com</organizationUrl>
        </developer>
    </developers>

    <properties>
        <kotlin.compiler.incremental>true</kotlin.compiler.incremental>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
        <java.version>1.8</java.version>
        <kotlin.version>1.3.10</kotlin.version>
        <spring-cloud.version>2.0.0.RELEASE</spring-cloud.version>
        <start-class>com.tyro.oss.rabbit_amazon_bridge.RabbitAmazonBridgeApplicationKt</start-class>
        <logback.version>1.2.3</logback.version>
        <guava.version>25.0-jre</guava.version>
        <latest.jolt.version>0.1.1</latest.jolt.version>
    </properties>

    <pluginRepositories>
        <pluginRepository>
            <id>jcenter</id>
            <name>JCenter</name>
            <url>https://jcenter.bintray.com/</url>
        </pluginRepository>
    </pluginRepositories>

    <profiles>
        <profile>
            <id>default</id>
            <properties>
                <spring.profiles.active>test</spring.profiles.active>
            </properties>
            <activation>
                <activeByDefault>true</activeByDefault>
            </activation>
        </profile>
        <profile>
            <id>compile-only</id>
            <activation>
                <property>
                    <name>skipTests</name>
                </property>
            </activation>
            <properties>
                <skip.failsafe.tests>true</skip.failsafe.tests>
                <skip.surefire.tests>true</skip.surefire.tests>
                <skip.docker.startup>true</skip.docker.startup>
                <maven.javadoc.skip>true</maven.javadoc.skip>
                <clm.skip>true</clm.skip>
            </properties>
        </profile>
        <profile>
            <id>unit-tests</id>
            <properties>
                <maven.javadoc.skip>true</maven.javadoc.skip>
                <clm.skip>true</clm.skip>
                <mdep.analyze.skip>true</mdep.analyze.skip>
                <jar.skipIfEmpty>true</jar.skipIfEmpty>
                <source.skip>true</source.skip>
                <checkstyle.skip>true</checkstyle.skip>
                <skipDuplicateClassCheck>true</skipDuplicateClassCheck>
                <enforcer.skip>true</enforcer.skip>
                <skip.failsafe.tests>true</skip.failsafe.tests>
                <skip.surefire.tests>false</skip.surefire.tests>
                <skip.docker.startup>true</skip.docker.startup>
                <skip.javadoc.generation>true</skip.javadoc.generation>
                <skip.sources.generation>true</skip.sources.generation>
            </properties>
        </profile>
        <profile>
            <id>docker-integration-tests</id>
            <properties>
                <maven.javadoc.skip>true</maven.javadoc.skip>
                <clm.skip>true</clm.skip>
                <mdep.analyze.skip>true</mdep.analyze.skip>
                <jar.skipIfEmpty>true</jar.skipIfEmpty>
                <source.skip>true</source.skip>
                <checkstyle.skip>true</checkstyle.skip>
                <skipDuplicateClassCheck>true</skipDuplicateClassCheck>
                <enforcer.skip>true</enforcer.skip>
                <skip.failsafe.tests>false</skip.failsafe.tests>
                <skip.surefire.tests>true</skip.surefire.tests>
                <skip.docker.startup>true</skip.docker.startup>
                <spring.profiles.active>docker-integration-test</spring.profiles.active>
                <skip.javadoc.generation>true</skip.javadoc.generation>
                <skip.sources.generation>true</skip.sources.generation>
            </properties>
        </profile>
    </profiles>

    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>org.springframework.security</groupId>
                <artifactId>spring-security-bom</artifactId>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <dependencies>
        <dependency>
            <groupId>org.jetbrains.kotlin</groupId>
            <artifactId>kotlin-stdlib-jdk8</artifactId>
            <version>${kotlin.version}</version>
        </dependency>
        <dependency>
            <groupId>org.jetbrains.kotlin</groupId>
            <artifactId>kotlin-reflect</artifactId>
            <version>${kotlin.version}</version>
        </dependency>
        <dependency>
            <groupId>org.jetbrains</groupId>
            <artifactId>annotations</artifactId>
            <version>13.0</version>
        </dependency>

        <dependency>
            <groupId>javax.mail</groupId>
            <artifactId>javax.mail-api</artifactId>
            <version>1.6.1</version>
            <scope>runtime</scope>
        </dependency>
        <dependency>
            <groupId>com.sun.mail</groupId>
            <artifactId>javax.mail</artifactId>
            <version>1.6.1</version>
            <scope>runtime</scope>
        </dependency>
        <dependency>
            <groupId>com.papertrailapp</groupId>
            <artifactId>logback-syslog4j</artifactId>
            <version>1.0.0</version>
            <scope>runtime</scope>
        </dependency>
        <dependency>
            <groupId>javax.annotation</groupId>
            <artifactId>javax.annotation-api</artifactId>
            <version>1.2</version>
        </dependency>
        <dependency>
            <groupId>org.springframework.cloud</groupId>
            <artifactId>spring-cloud-starter-aws</artifactId>
            <version>${spring-cloud.version}</version>
        </dependency>
        <dependency>
            <groupId>org.springframework.cloud</groupId>
            <artifactId>spring-cloud-aws-messaging</artifactId>
            <version>${spring-cloud.version}</version>
        </dependency>
        <dependency>
            <groupId>org.springframework.cloud</groupId>
            <artifactId>spring-cloud-aws-autoconfigure</artifactId>
            <version>${spring-cloud.version}</version>
        </dependency>
        <dependency>
            <groupId>org.springframework.cloud</groupId>
            <artifactId>spring-cloud-aws-core</artifactId>
            <version>${spring-cloud.version}</version>
        </dependency>
        <dependency>
            <groupId>org.springframework.retry</groupId>
            <artifactId>spring-retry</artifactId>
        </dependency>
        <dependency>
            <groupId>com.bazaarvoice.jolt</groupId>
            <artifactId>jolt-core</artifactId>
            <version>${latest.jolt.version}</version>
        </dependency>
        <dependency>
            <groupId>com.bazaarvoice.jolt</groupId>
            <artifactId>json-utils</artifactId>
            <version>${latest.jolt.version}</version>
        </dependency>

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-amqp</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.amqp</groupId>
            <artifactId>spring-rabbit</artifactId>
        </dependency>

        <dependency>
            <groupId>org.springframework.security</groupId>
            <artifactId>spring-security-core</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-webmvc</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-actuator</artifactId>
        </dependency>

        <dependency>
            <groupId>javax.servlet</groupId>
            <artifactId>javax.servlet-api</artifactId>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>org.mortbay.jasper</groupId>
            <artifactId>apache-el</artifactId>
        </dependency>
        <dependency>
            <groupId>javax.el</groupId>
            <artifactId>javax.el-api</artifactId>
        </dependency>
        <dependency>
            <groupId>javax.validation</groupId>
            <artifactId>validation-api</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
            <exclusions>
                <exclusion>
                    <groupId>org.glassfish.web</groupId>
                    <artifactId>javax.servlet.jsp</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>org.glassfish</groupId>
                    <artifactId>javax.el</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>org.apache.tomcat.embed</groupId>
                    <artifactId>tomcat-embed-el</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>org.hibernate.validator</groupId>
                    <artifactId>hibernate-validator</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-autoconfigure</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-web</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-core</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-context</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-beans</artifactId>
        </dependency>
        <dependency>
            <groupId>com.google.code.gson</groupId>
            <artifactId>gson</artifactId>
        </dependency>
        <dependency>
            <groupId>commons-logging</groupId>
            <artifactId>commons-logging</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-tx</artifactId>
        </dependency>
        <dependency>
            <groupId>org.hibernate</groupId>
            <artifactId>hibernate-validator</artifactId>
        </dependency>
        <dependency>
            <groupId>com.fasterxml.jackson.module</groupId>
            <artifactId>jackson-module-kotlin</artifactId>
        </dependency>

        <!-- Test dependencies -->
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-test</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-test</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-test-autoconfigure</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.springframework.security</groupId>
            <artifactId>spring-security-test</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.assertj</groupId>
            <artifactId>assertj-core</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.hamcrest</groupId>
            <artifactId>hamcrest-core</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.hamcrest</groupId>
            <artifactId>hamcrest-library</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.mockito</groupId>
            <artifactId>mockito-core</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>com.tyro.oss</groupId>
            <artifactId>arbitrater</artifactId>
            <version>0.0.5</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>com.tyro.oss</groupId>
            <artifactId>random-data</artifactId>
            <version>0.0.2</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>com.nhaarman</groupId>
            <artifactId>mockito-kotlin</artifactId>
            <version>1.6.0</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.jetbrains.kotlin</groupId>
            <artifactId>kotlin-test-junit</artifactId>
            <version>${kotlin.version}</version>
            <scope>test</scope>
        </dependency>
    </dependencies>

    <build>
        <sourceDirectory>${project.basedir}/src/main/kotlin</sourceDirectory>
        <testSourceDirectory>${project.basedir}/src/test/kotlin</testSourceDirectory>
        <plugins>
            <plugin>
                <artifactId>kotlin-maven-plugin</artifactId>
                <groupId>org.jetbrains.kotlin</groupId>
                <version>${kotlin.version}</version>
                <configuration>
                    <compilerPlugins>
                        <plugin>spring</plugin>
                    </compilerPlugins>
                    <jvmTarget>1.8</jvmTarget>
                </configuration>
                <executions>
                    <execution>
                        <id>compile</id>
                        <phase>compile</phase>
                        <goals>
                            <goal>compile</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>test-compile</id>
                        <phase>test-compile</phase>
                        <goals>
                            <goal>test-compile</goal>
                        </goals>
                    </execution>
                </executions>
                <dependencies>
                    <dependency>
                        <groupId>org.jetbrains.kotlin</groupId>
                        <artifactId>kotlin-maven-allopen</artifactId>
                        <version>${kotlin.version}</version>
                    </dependency>
                </dependencies>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-failsafe-plugin</artifactId>
                <version>2.22.0</version>
                <configuration>
                    <argLine>-Dproject.version=${project.version} -Dspring.profiles.active=${spring.profiles.active}
                    </argLine>
                    <skipTests>${skip.failsafe.tests}</skipTests>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <configuration>
                    <argLine>-Dproject.version=${project.version}
                    </argLine>
                    <skipTests>${skip.surefire.tests}</skipTests>
                </configuration>
            </plugin>
            <plugin>
                <groupId>io.fabric8</groupId>
                <artifactId>docker-maven-plugin</artifactId>
                <version>0.27.2</version>
                <configuration>
                    <images>
                        <image>
                            <name>rabbitmq:3.7.7-management</name>
                            <run>
                                <env>
                                    <RABBITMQ_USER>guest</RABBITMQ_USER>
                                    <RABBITMQ_PASSWORD>guest</RABBITMQ_PASSWORD>
                                    <RABBITMQ_DEFAULT_VHOST>/</RABBITMQ_DEFAULT_VHOST>
                                </env>
                                <ports>
                                    <port>127.0.0.1:15672:15672</port>
                                    <port>127.0.0.1:5672:5672</port>
                                </ports>
                                <wait>
                                    <http>
                                        <url>http://guest:guest@localhost:15672/api/aliveness-test/%2F</url>
                                        <method>GET</method>
                                        <status>200</status>
                                    </http>
                                    <time>60000</time>
                                </wait>
                            </run>
                        </image>
                        <image>
                            <name>softwaremill/elasticmq</name>
                            <run>
                                <volumes>
                                    <bind>
                                        <volume>${project.basedir}/local-sqs/elasticmq.conf:/opt/elasticmq.conf</volume>
                                    </bind>
                                </volumes>
                                <ports>
                                    <port>127.0.0.1:9324:9324</port>
                                </ports>
                                <wait>
                                    <tcp>
                                        <host>127.0.0.1</host>
                                        <ports>
                                            <port>9324</port>
                                        </ports>
                                    </tcp>
                                    <time>60000</time>
                                </wait>
                            </run>
                        </image>
                    </images>
                </configuration>
                <executions>
                    <execution>
                        <id>pre-stop</id>
                        <phase>pre-integration-test</phase>
                        <configuration>
                            <skip>${skip.docker.startup}</skip>
                        </configuration>
                        <goals>
                            <goal>stop</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>start</id>
                        <phase>pre-integration-test</phase>
                        <configuration>
                            <skip>${skip.docker.startup}</skip>
                        </configuration>
                        <goals>
                            <goal>start</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>stop</id>
                        <phase>post-integration-test</phase>
                        <configuration>
                            <skip>${skip.docker.startup}</skip>
                        </configuration>
                        <goals>
                            <goal>stop</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
                <configuration>
                    <jvmArguments>-Xms128m -Xmx512m -Dspring.profiles.active=${spring.profiles.active}
                    </jvmArguments>
                    <folders>
                        <folder>src/test/resources</folder>
                    </folders>
                    <mainClass>com.tyro.oss.rabbit_amazon_bridge.RabbitAmazonBridgeApplicationKt</mainClass>
                    <classifier>deployable</classifier>
                    <fork>true</fork>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.jetbrains.dokka</groupId>
                <artifactId>dokka-maven-plugin</artifactId>
                <version>0.9.17</version>
                <executions>
                    <execution>
                        <phase>prepare-package</phase>
                        <goals>
                            <goal>javadocJar</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <skip>${skip.javadoc.generation}</skip>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-source-plugin</artifactId>
                <version>3.0.1</version>
                <executions>
                    <execution>
                        <id>attach-sources</id>
                        <goals>
                            <goal>jar</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <skipSource>${skip.sources.generation}</skipSource>
                </configuration>
            </plugin>
        </plugins>
    </build>
</project>
